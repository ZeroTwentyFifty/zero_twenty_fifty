name: Python App CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run tests and generate coverage
        run: |
          poetry run pytest --cov=. --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
            token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run linter
        continue-on-error: true
        run: |
          poetry run flake8 .

      - name: Run type checker
        continue-on-error: true
        run: |
          poetry run mypy .

      - name: Update dependencies
        run: |
          poetry update
